generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x", "windows"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model administrador {
  idAdmin         Int               @id @default(autoincrement())
  usuario         String            @unique(map: "username_UNIQUE") @db.VarChar(45)
  contrase_a      String            @map("contraseña") @db.VarChar(50)
  correo          String            @db.VarChar(50)
  rol             administrador_rol @default(editor)
  creado          DateTime          @db.DateTime(0)
  actualizado     DateTime          @db.DateTime(0)
  categorias      categorias[]
  clientes        clientes[]
  configuraciones configuraciones[]
  paginas         paginas[]
  productos       productos[]
  servicios       servicios[]
}

model categorias {
  idCategoria   Int           @id @default(autoincrement())
  idAdmin       Int
  nombre        String        @db.VarChar(100)
  descripcion   String        @db.VarChar(200)
  creado        DateTime      @db.DateTime(0)
  actualizado   DateTime      @db.DateTime(0)
  administrador administrador @relation(fields: [idAdmin], references: [idAdmin], onDelete: NoAction, onUpdate: NoAction, map: "fk_Categorias_Administradores1")
  productos     productos[]

  @@index([idAdmin], map: "fk_Categorias_Administradores1_idx")
}

model clientes {
  idCliente     Int           @id @default(autoincrement())
  idAdmin       Int
  nombre        String        @db.VarChar(100)
  apellido      String        @db.VarChar(100)
  correo        String        @db.VarChar(100)
  contrase_a    String        @map("contraseña") @db.VarChar(50)
  telefono      String        @db.VarChar(30)
  direccion     String        @db.VarChar(50)
  ciudad        String        @db.VarChar(45)
  mensaje       String        @db.VarChar(200)
  fecha         DateTime      @db.Date
  administrador administrador @relation(fields: [idAdmin], references: [idAdmin], onDelete: NoAction, onUpdate: NoAction, map: "fk_Contactos_Administradores1")

  @@index([idAdmin], map: "fk_Contactos_Administradores1_idx")
}

model configuraciones {
  idConfiguracion Int           @id @default(autoincrement())
  idAdmin         Int
  nombre          String        @unique(map: "nombre_UNIQUE") @db.VarChar(100)
  valor           String        @db.VarChar(200)
  descripcion     String?       @db.VarChar(200)
  creado          DateTime      @db.DateTime(0)
  actualizado     DateTime      @db.DateTime(0)
  administrador   administrador @relation(fields: [idAdmin], references: [idAdmin], onDelete: NoAction, onUpdate: NoAction, map: "fk_Configuraciones_Administradores1")

  @@index([idAdmin], map: "fk_Configuraciones_Administradores1_idx")
}

model paginas {
  idPagina      Int           @id @default(autoincrement())
  idAdmin       Int
  nombre        String        @db.VarChar(50)
  contenido     String        @db.Text
  tipo          paginas_tipo
  creado        DateTime      @db.DateTime(0)
  actualizado   DateTime      @db.DateTime(0)
  administrador administrador @relation(fields: [idAdmin], references: [idAdmin], onDelete: NoAction, onUpdate: NoAction, map: "fk_Paginas_Administradores")

  @@index([idAdmin], map: "fk_Paginas_Administradores_idx")
}

model productos {
  idProducto    Int           @id @default(autoincrement())
  idCategoria   Int
  idAdmin       Int
  nombre        String        @db.VarChar(100)
  descripcion   String?       @db.Text
  imagen_url    String        @db.VarChar(255)
  precio        Decimal?      @db.Decimal(10, 2)
  creado        DateTime      @db.DateTime(0)
  actualizado   DateTime      @db.DateTime(0)
  administrador administrador @relation(fields: [idAdmin], references: [idAdmin], onDelete: NoAction, onUpdate: NoAction, map: "fk_Productos_Administradores1")
  categorias    categorias    @relation(fields: [idCategoria], references: [idCategoria], onDelete: NoAction, onUpdate: NoAction, map: "fk_Productos_Categorias1")

  @@index([idAdmin], map: "fk_Productos_Administradores1_idx")
  @@index([idCategoria], map: "fk_Productos_Categorias1_idx")
}

model servicios {
  idServicio    Int           @id @default(autoincrement())
  idAdmin       Int
  nombre        String        @db.VarChar(100)
  descripcion   String        @db.VarChar(200)
  creado        DateTime      @db.DateTime(0)
  actualizado   DateTime      @db.DateTime(0)
  administrador administrador @relation(fields: [idAdmin], references: [idAdmin], onDelete: NoAction, onUpdate: NoAction, map: "fk_Servicios_Administradores1")

  @@index([idAdmin], map: "fk_Servicios_Administradores1_idx")
}

enum administrador_rol {
  admin
  editor
}

enum paginas_tipo {
  inicio
  productos
  servicios
  nosotros
  contacto
  blog
}
